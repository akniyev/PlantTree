//
// PaymentsHandlerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class PaymentsHandlerAPI: APIBase {
    /**
     * enum for parameter currency
     */
    public enum Currency_apiPaymentsHandlerWebmoneyPost: Int32 { 
        case number0 = 0
        case number1 = 1
        case number2 = 2
    }

    /**

     - parameter transactionId: (query)  (optional)
     - parameter amount: (query)  (optional)
     - parameter currency: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiPaymentsHandlerWebmoneyPost(transactionId: Int32? = nil, amount: Double? = nil, currency: Currency_apiPaymentsHandlerWebmoneyPost? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        apiPaymentsHandlerWebmoneyPostWithRequestBuilder(transactionId: transactionId, amount: amount, currency: currency).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /api/PaymentsHandler/webmoney
     
     - parameter transactionId: (query)  (optional)
     - parameter amount: (query)  (optional)
     - parameter currency: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiPaymentsHandlerWebmoneyPostWithRequestBuilder(transactionId: Int32? = nil, amount: Double? = nil, currency: Currency_apiPaymentsHandlerWebmoneyPost? = nil) -> RequestBuilder<Void> {
        let path = "/api/PaymentsHandler/webmoney"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "transactionId": transactionId?.encodeToJSON(), 
            "amount": amount, 
            "currency": 0 //currency?.encodeToJSON()?.rawValue
        ])
        

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
